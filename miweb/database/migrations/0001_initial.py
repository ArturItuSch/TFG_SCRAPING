# Generated by Django 5.2 on 2025-05-21 10:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campeon',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('imagen', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('pais', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('propietario', models.CharField(blank=True, max_length=100, null=True)),
                ('head_coach', models.CharField(blank=True, max_length=100, null=True)),
                ('partners', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_fundacion', models.DateField(blank=True, null=True)),
                ('logo', models.CharField(blank=True, max_length=100, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('num_partidos', models.IntegerField(blank=True, null=True)),
                ('patch', models.FloatField(blank=True, null=True)),
                ('dia', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SplitLEC',
            fields=[
                ('split_id', models.CharField(blank=True, max_length=200, primary_key=True, serialize=False)),
                ('split_type', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('league', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Jugador',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('real_name', models.CharField(blank=True, max_length=100, null=True)),
                ('residencia', models.CharField(blank=True, max_length=100, null=True)),
                ('rol', models.CharField(blank=True, max_length=100, null=True)),
                ('pais', models.CharField(blank=True, max_length=100, null=True)),
                ('nacimiento', models.DateField(blank=True, null=True)),
                ('soloqueue_ids', models.CharField(blank=True, max_length=100, null=True)),
                ('contratado_hasta', models.DateField(blank=True, null=True)),
                ('contratado_desde', models.DateField(blank=True, null=True)),
                ('imagen', models.CharField(blank=True, max_length=100, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('equipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.equipo')),
            ],
        ),
        migrations.CreateModel(
            name='Partido',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('orden', models.IntegerField(blank=True, null=True)),
                ('duracion', models.IntegerField(blank=True, null=True)),
                ('equipo_azul', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partidos_azul', to='database.equipo')),
                ('equipo_ganador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partidos_ganados', to='database.equipo')),
                ('equipo_rojo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partidos_rojo', to='database.equipo')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidos', to='database.serie')),
            ],
        ),
        migrations.AddField(
            model_name='serie',
            name='split',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='database.splitlec'),
        ),
        migrations.CreateModel(
            name='ObjetivosNeutrales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstdragon', models.PositiveIntegerField(default=0)),
                ('dragons', models.PositiveIntegerField(default=0)),
                ('elementaldrakes', models.PositiveIntegerField(default=0)),
                ('infernals', models.PositiveIntegerField(default=0)),
                ('mountains', models.PositiveIntegerField(default=0)),
                ('clouds', models.PositiveIntegerField(default=0)),
                ('oceans', models.PositiveIntegerField(default=0)),
                ('chemtechs', models.PositiveIntegerField(default=0)),
                ('hextechs', models.PositiveIntegerField(default=0)),
                ('dragons_type_unknown', models.PositiveIntegerField(default=0)),
                ('elders', models.PositiveIntegerField(default=0)),
                ('firstherald', models.PositiveIntegerField(default=0)),
                ('heralds', models.PositiveIntegerField(default=0)),
                ('void_grubs', models.PositiveIntegerField(default=0)),
                ('firstbaron', models.PositiveIntegerField(default=0)),
                ('barons', models.PositiveIntegerField(default=0)),
                ('firsttower', models.PositiveIntegerField(default=0)),
                ('towers', models.PositiveIntegerField(default=0)),
                ('firstmidtower', models.PositiveIntegerField(default=0)),
                ('firsttothreetowers', models.PositiveIntegerField(default=0)),
                ('turretplates', models.PositiveIntegerField(default=0)),
                ('inhibitors', models.PositiveIntegerField(default=0)),
                ('equipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetivos_pivotados', to='database.equipo')),
                ('partida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetivos_pivotados', to='database.partido')),
            ],
            options={
                'unique_together': {('partida', 'equipo')},
            },
        ),
        migrations.CreateModel(
            name='JugadorEnPartida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=10, null=True)),
                ('kills', models.PositiveIntegerField(blank=True, null=True)),
                ('deaths', models.PositiveIntegerField(blank=True, null=True)),
                ('assists', models.PositiveIntegerField(blank=True, null=True)),
                ('doublekills', models.PositiveIntegerField(blank=True, null=True)),
                ('triplekills', models.PositiveIntegerField(blank=True, null=True)),
                ('quadrakills', models.PositiveIntegerField(blank=True, null=True)),
                ('pentakills', models.PositiveIntegerField(blank=True, null=True)),
                ('firstbloodkill', models.BooleanField(blank=True, null=True)),
                ('firstbloodassist', models.BooleanField(blank=True, null=True)),
                ('firstbloodvictim', models.BooleanField(blank=True, null=True)),
                ('damagetochampions', models.FloatField(blank=True, null=True)),
                ('damagetaken', models.FloatField(blank=True, null=True)),
                ('wardsplaced', models.PositiveIntegerField(blank=True, null=True)),
                ('wardskilled', models.PositiveIntegerField(blank=True, null=True)),
                ('controlwardsbought', models.PositiveIntegerField(blank=True, null=True)),
                ('visionscore', models.PositiveIntegerField(blank=True, null=True)),
                ('totalgold', models.PositiveIntegerField(blank=True, null=True)),
                ('total_cs', models.PositiveIntegerField(blank=True, null=True)),
                ('minionkills', models.PositiveIntegerField(blank=True, null=True)),
                ('monsterkills', models.PositiveIntegerField(blank=True, null=True)),
                ('goldat10', models.FloatField(blank=True, null=True)),
                ('xpat10', models.FloatField(blank=True, null=True)),
                ('csat10', models.FloatField(blank=True, null=True)),
                ('killsat10', models.FloatField(blank=True, null=True)),
                ('assistsat10', models.FloatField(blank=True, null=True)),
                ('deathsat10', models.FloatField(blank=True, null=True)),
                ('goldat15', models.FloatField(blank=True, null=True)),
                ('xpat15', models.FloatField(blank=True, null=True)),
                ('csat15', models.FloatField(blank=True, null=True)),
                ('killsat15', models.FloatField(blank=True, null=True)),
                ('assistsat15', models.FloatField(blank=True, null=True)),
                ('deathsat15', models.FloatField(blank=True, null=True)),
                ('goldat20', models.FloatField(blank=True, null=True)),
                ('xpat20', models.FloatField(blank=True, null=True)),
                ('csat20', models.FloatField(blank=True, null=True)),
                ('killsat20', models.FloatField(blank=True, null=True)),
                ('assistsat20', models.FloatField(blank=True, null=True)),
                ('deathsat20', models.FloatField(blank=True, null=True)),
                ('goldat25', models.FloatField(blank=True, null=True)),
                ('xpat25', models.FloatField(blank=True, null=True)),
                ('csat25', models.FloatField(blank=True, null=True)),
                ('killsat25', models.FloatField(blank=True, null=True)),
                ('assistsat25', models.FloatField(blank=True, null=True)),
                ('deathsat25', models.FloatField(blank=True, null=True)),
                ('campeon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.campeon')),
                ('jugador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.jugador')),
                ('partido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.partido')),
            ],
            options={
                'unique_together': {('jugador', 'partido')},
            },
        ),
        migrations.CreateModel(
            name='Seleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.IntegerField()),
                ('baneo', models.IntegerField(blank=True, null=True)),
                ('campeon_baneado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='baneos', to='database.campeon')),
                ('campeon_seleccionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selecciones', to='database.campeon')),
                ('equipo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.equipo')),
                ('partido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.partido')),
            ],
            options={
                'unique_together': {('equipo', 'partido', 'campeon_seleccionado')},
            },
        ),
    ]
